* Terminology
JUnit - the most popular and widely-used unit testing framework for Java
Jupiter - JUnit 5 version (latest as of 2021)
Mockito - for mocking (Non android) objects for unit tests
Roboelectric = for mocking android objects for unit and integration tests
Espresso - android UI testing framework


* Unit tests (junit)

Unit tests are written using junit. Its the only thing needed if code to be unit tested does not have other dependencies that need to be mocked. In case there are objects to be mocked see below from android documentation:

"You can evaluate your app's logic using local unit tests when you need to run tests more quickly and don't need the fidelity and confidence associated with running tests on a real device. With this approach, you normally fulfill your dependency relationships using either Robolectric or a mocking framework, such as Mockito. Usually, the types of dependencies associated with your tests determine which tool you use:

 If you have dependencies on the Android framework, particularly those that create complex interactions with the framework, it's better to include framework dependencies using Robolectric.
 If your tests have minimal dependencies on the Android framework, or if the tests depend only on your own objects, it's fine to include mock dependencies using a mocking framework like Mockito."

So in summary if no android dependencies use Mockito, in other case Robolectric.